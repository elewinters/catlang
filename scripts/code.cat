fn puts(a: i64);
fn printf(fmt: i64, n: i32);
fn putchar(c: i8);

fn myputchar(c: i8, c2: i8) {
	putchar(c);
	putchar(c2);
	putchar(10);
}

fn abc() {
	putchar(65);
	putchar(66);
	putchar(67);
	putchar(10); /* newline */
}

fn div(x: i32, y: i32) -> i32 {
	asm!("mov eax, edi");
	asm!("idiv esi");
}

fn div_real(x: i32, y: i32) -> i32 {
	return x / y;
}

fn sqr(x: i32) -> i32 {
	return x * x;
}

fn main() -> i32 {
	let square: i32 = sqr(50) + sqr(50) / 2;
	abc();

	asm!("xor rax, rax");
	printf("%d\n", square);

	let dived: i32 = div_real(200, 2);

	asm!("xor rax, rax");
	printf("%d\n", dived);

	return 0;
}
